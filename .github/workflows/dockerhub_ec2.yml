name: CI/CD to EC2

on:
  push:
    branches: ["test"]

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          echo "Building Docker image..."
          docker build -t kevinseya/payment_notification:latest .

      - name: Push Docker Image
        run: |
          echo "Pushing Docker image to Docker Hub..."
          docker push kevinseya/payment_notification:latest

  deploy-to-ec2:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    steps:
      - name: Set up SSH key for EC2 access
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_PRIVATE_KEY }}

      - name: SSH into EC2 and deploy container
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PUBLIC_DNS }} << 'EOF'
            # Verificar e instalar Docker si es necesario.
            if ! command -v docker &> /dev/null; then
              sudo yum update -y
              sudo yum install -y docker
              sudo systemctl start docker
              sudo systemctl enable docker
            fi

            # Download the image
            sudo docker pull kevinseya/payment_notification:latest

            # Stop and remove previous container
            sudo docker stop payment_notification || true
            sudo docker rm payment_notification || true

            # Generate .env file
            echo "MONGO_URL=${{ secrets.MONGO_URL }}" > .env
            echo "MONGO_DB_NAME=${{ secrets.MONGO_DB_NAME }}" >> .env
            echo "MONGO_COLLECTION=${{ secrets.MONGO_COLLECTION }}" >> .env
            echo "MAIL_SERVER=${{ secrets.MAIL_SERVER }}" >> .env
            echo "MAIL_PORT=${{ secrets.MAIL_PORT }}" >> .env
            echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> .env
            echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> .env
            echo "MAIL_USE_TLS=${{ secrets.MAIL_USE_TLS }}" >> .env
            echo "MAIL_USE_SSL=${{ secrets.MAIL_USE_SSL }}" >> .env
            echo "PORT=${{ secrets.PORT }}" >> .env
            cat .env
            # Run new container
            sudo docker run -d --name payment_notification \
              --env-file .env \
              -p 5003:5003 \
              kevinseya/payment_notification:latest
          EOF
